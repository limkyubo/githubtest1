<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="member">

<insert parameterType="kr.co.godtrip.member.MemberDTO" id="insert">
insert into member(id,passwd,mname,tel,email,zipcode,address1,address2,mlevel)
values(#{id},#{passwd},#{mname},#{tel},#{email},#{zipcode},#{address1},#{address2},'B1')
</insert>



<select id="duplicateId" parameterType="kr.co.godtrip.member.MemberDTO" resultType="int">
select count(id) as cnt
from member
where id=#{id}
</select>

<select id="duplicateEmail" resultType="int" parameterType="kr.co.godtrip.member.MemberDTO">
select count(email) as cnt
from member
where email=#{email}
</select>


<select id="loginProc" resultType="kr.co.godtrip.member.MemberDTO" parameterType="kr.co.godtrip.member.MemberDTO">
    SELECT *
    FROM member
    WHERE id=#{id} AND passwd=#{passwd}
</select>

<select id="select" resultType="kr.co.godtrip.member.MemberDTO" parameterType="kr.co.godtrip.member.MemberDTO">
select *
from member
where id=#{s_id}
</select>

<update id="update" parameterType="java.util.Map">
	update member set
	passwd=#{passwd},
	mname=#{mname},
	tel=#{tel},
	email=#{email},
	zipcode=#{zipcode},
	address1=#{address1},
	address2=#{address2}
	where id=#{id}
</update>


<update id="memberdelete" parameterType="java.util.Map">
 update member
    set mlevel='F1'
    where id=#{id} and passwd=#{passwd}
</update>

<select id="findID" parameterType="kr.co.godtrip.member.MemberDTO" resultType="kr.co.godtrip.member.MemberDTO">
    SELECT id
    FROM member
    WHERE email=#{email} and mname=#{mname}
</select>

<update id="renewPW" parameterType="kr.co.godtrip.member.MemberDTO">
    UPDATE member
    SET passwd=#{passwd}
    WHERE email=#{email} and mname=#{mname}
</update>

<select id="findById" parameterType="string" resultType="java.util.Map">
	SELECT * 
	FROM member
	WHERE id = #{id}
</select>

<select id="paymentList" resultType="java.util.Map" parameterType="String">
	SELECT PM.merchant_uid, PM.orderDate, PM.amount, PM.departureDate, PM.Price, PM.Total, 
	HT.hotel_Name, RM.room_Name, TP.departure_Time, TP.arrival_Time, TP.departure_code, TP.arrival_code, TI.trans_name
	FROM payment PM
	JOIN room RM ON PM.room_code = RM.room_code
	JOIN transpro TP ON PM.transpro_code = TP.transpro_code	
	JOIN transinfo TI ON TP.trans_code = TI.trans_code
	JOIN hotel HT ON HT.hotel_code = RM.hotel_code
	WHERE PM.id = #{id}
</select>

</mapper>